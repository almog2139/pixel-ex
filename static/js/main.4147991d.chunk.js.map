{"version":3,"sources":["assets/imgs/menu-items sync /^/.*/.jpg$","assets/imgs/menu-items/menu-item1.jpg","assets/imgs/menu-items/menu-item2.jpg","assets/imgs/menu-items/menu-item3.jpg","routes.js","assets/imgs/bg-hero.png","assets/imgs/hero-bg-mobile.png","assets/imgs/logo.svg","cmps/hero.jsx","services/utilService.js","services/itemService.js","assets/imgs/icon-minus.svg","cmps/ItemPreview.jsx","assets/imgs/pattern-divide.svg","cmps/ItemList.jsx","App.jsx","services/toyService.js","store/reducers/toyReducer.js","store/store.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","routes","Hero","className","src","logo","alt","heroBg","heroBgMobile","utilService","getRandomInt","min","max","Math","ceil","floor","random","makeId","length","text","possible","i","charAt","itemService","query","items","title","desc","imgUrl","ItemPreview","item","require","default","iconMinus","ItemList","useState","setItems","useEffect","console","log","patternDivide","App","route","exact","component","path","Axios","create","withCredentials","initialState","filterBy","toys","msg","rootReducer","combineReducers","toyReducer","state","action","type","toy","_id","filter","toyId","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","addEventListener","prompt","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4147991d.chunk.js","sourcesContent":["var map = {\n\t\"./menu-item1.jpg\": 59,\n\t\"./menu-item2.jpg\": 60,\n\t\"./menu-item3.jpg\": 61\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 58;","export default __webpack_public_path__ + \"static/media/menu-item1.7bd94a87.jpg\";","export default __webpack_public_path__ + \"static/media/menu-item2.81249e77.jpg\";","export default __webpack_public_path__ + \"static/media/menu-item3.22eddbf1.jpg\";","\r\n\r\n\r\n\r\n\r\nexport const routes = [\r\n \r\n    // {\r\n    //     path:'/user/edit/:userId?',\r\n    //     component:UserEdit\r\n    // },\r\n    \r\n\r\n]","export default __webpack_public_path__ + \"static/media/bg-hero.2fa0f1ad.png\";","export default __webpack_public_path__ + \"static/media/hero-bg-mobile.a2c622d6.png\";","export default __webpack_public_path__ + \"static/media/logo.f6ae2c4c.svg\";","import React from 'react'\r\nimport heroBg from '../assets/imgs/bg-hero.png'        \r\nimport heroBgMobile from '../assets/imgs/hero-bg-mobile.png'        \r\nimport logo from '../assets/imgs/logo.svg'\r\n\r\nexport function Hero() {\r\n    return (\r\n        <section className=\"hero flex\">\r\n            <div className=\"hero-text flex column\">\r\n                <img src={logo} alt=\"\" className=\"logo\" />\r\n                 <span>\r\n                    Exquisite dining\r\n                    since 1989\r\n                </span> \r\n                <p>\r\n                Experience our seasonal menu in beautiful country surroundings. Eat the freshest produce from the comfort of our farmhouse.\r\n                </p>\r\n                <button>\r\n                BOOK A TABLE\r\n                </button>  \r\n\r\n            </div>\r\n            <img src={heroBg} alt=\"\" className=\"hero-bg\"/>\r\n            <img src={heroBgMobile} alt=\"\" className=\"hero-bg-mobile none\"/>\r\n\r\n\r\n        </section>\r\n    )\r\n}\r\n","export const utilService = {\r\n    getRandomInt,\r\n    makeId\r\n}\r\n\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction makeId(length=3) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}","import { utilService } from './utilService.js'\r\nexport const itemService = {\r\n    query,\r\n}\r\n\r\nconst items = [\r\n    {\r\n        id: utilService.makeId(),\r\n        title: 'Seared Salmon Fillet',\r\n        desc: 'Our locally sourced salmon served with a refreshing buckwheat summer salad.',\r\n        imgUrl: 'menu-item1'\r\n    },\r\n    {\r\n        id: utilService.makeId(),\r\n        title: 'Rosemary Filet Mignon',\r\n        desc: 'Our prime beef served to your taste with a delicious choice of seasonal sides.',\r\n        imgUrl: 'menu-item2'\r\n\r\n    },\r\n    {\r\n        id: utilService.makeId(),\r\n        title: 'Summer Fruit Chocolate Mousse',\r\n        desc: 'Creamy mousse combined with summer fruits and dark chocolate shavings.',\r\n        imgUrl: 'menu-item3'\r\n\r\n    },\r\n\r\n]\r\n\r\n\r\n\r\nfunction query() {\r\n    return items\r\n}","export default __webpack_public_path__ + \"static/media/icon-minus.a1f316e7.svg\";","import React from 'react'\r\nimport iconMinus from '../assets/imgs/icon-minus.svg'\r\n\r\nexport function ItemPreview({ item }) {\r\n    const { imgUrl, title, desc } = item\r\n    return (\r\n       \r\n                <div className=\"item-preview flex  space between align-center\">\r\n                    <div className=\"flex item-img-div\">\r\n                        <img src={require(`../assets/imgs/menu-items/${imgUrl}.jpg`).default} />\r\n                        <img src={iconMinus} className=\"img-minus relative\" />\r\n                    </div>\r\n                    <div className=\"flex column\">\r\n                        <p className=\"item-title\">{title}</p>\r\n                        <p className=\"item-desc\">{desc}</p>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pattern-divide.bf6d0c5c.svg\";","\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport { itemService } from '../services/itemService.js'\r\nimport { ItemPreview } from './ItemPreview.jsx'\r\nimport patternDivide from '../assets/imgs/pattern-divide.svg'\r\n\r\nexport default function ItemList() {\r\n    const [items, setItems] = useState(null)\r\n    useEffect(() => {\r\n        setItems(itemService.query())\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n    console.log('items', items);\r\n    if (!items) return <h1>loading..</h1>\r\n    return (\r\n        <section className=\"items\">\r\n            <div className=\"items-container flex space-between\">\r\n                <div className=\"flex column\">\r\n                    <img src={patternDivide}  className=\"pattern-divide\"/>\r\n                    <p className=\"title\">A few highlights from our menu</p>\r\n                    <p className=\"desc\">We cater for all dietary requirements, but here’s a glimpse at some of our diner’s favourites. Our menu is revamped every season.</p>\r\n                </div>\r\n                <div className=\"item-list flex column\">\r\n                    {items.map(item => {\r\n\r\n                        return <ItemPreview key={item.id} item={item} />;\r\n\r\n                    })}\r\n\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","//  import './App.css';\nimport './assets/styles/styles.scss'\nimport { Switch, Route } from 'react-router-dom';\nimport {routes} from './routes.js'\nimport { AppHeader } from './pages/AppHeader';\nimport {Hero} from './cmps/hero'\nimport ItemList from './cmps/ItemList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    \n    <Hero/>\n    <ItemList/>\n      <Switch>\n      {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","// import { utilService } from './utilService.js';\r\nimport Axios from 'axios';\r\nconst axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nconst baseUrl = 'http://localhost:3030/api/toys'\r\n\r\n\r\n\r\nexport const toyService = {\r\n    removeToy,\r\n    query,\r\n    getById,\r\n    save,\r\n    getTypes,\r\n    getToyIdxById,\r\n    getChartData,\r\n    getChartDataByYear,\r\n\r\n    \r\n    // getPrevToy\r\n\r\n}\r\n\r\nasync function getToyIdxById(toyId) {\r\n    const toys = (await axios.get(`${baseUrl}`)).data\r\n    var toyIdx = toys.findIndex(toy => toy._id === toyId)\r\n    console.log('id service ', toyIdx);\r\n    return toyIdx\r\n\r\n\r\n}\r\n\r\nasync function getById(toyId) {\r\n    console.log('iddd', toyId);\r\n    const toy = (await axios.get(`${baseUrl}/${toyId}`)).data\r\n    return toy\r\n\r\n}\r\n\r\n\r\nasync function query(filterBy ={}) {\r\n    // console.log('filterrr', filterBy);\r\n    // let filterParams = '';\r\n    // if (filterBy) {\r\n\r\n    //     filterParams = (filterBy.type !== 'all') ? `?type=${filterBy.type}` : '?'\r\n    //     if (filterBy.name) {\r\n    //         console.log('filterByName', filterBy.name);\r\n    //         filterParams += `&name_like=${filterBy.name}`\r\n    //     }\r\n\r\n    //     if (filterBy.filter === 'inStock') filterParams += `&inStock=true`\r\n    //     else filterParams += `&_sort=${filterBy.filter}&_order=asc`\r\n    // }\r\n    // console.log('filterBy', filterParams)\r\n    // const toys = (await axios.get(`${baseUrl}${filterParams}`)).data\r\n     const toys = (await axios.get(baseUrl, {params: filterBy })).data\r\n    return toys\r\n\r\n}\r\n\r\nasync function removeToy(toyId) {\r\n    console.log('toyId', toyId);\r\n    axios.delete(`${baseUrl}/${toyId}`)\r\n}\r\n\r\nasync function save(toyToSave) {\r\n    if (toyToSave._id) {\r\n        // UPDATE\r\n        console.log('iff');\r\n        const toy = (await axios.put(`${baseUrl}/${toyToSave._id}`, toyToSave)).data\r\n        return toy\r\n    } else {\r\n        // CREATE\r\n        console.log('else');\r\n        toyToSave.createdAt = Date.now()\r\n        toyToSave.inStock = true\r\n        const toyToAdd = (await axios.post(`${baseUrl}`, toyToSave)).data\r\n        return toyToAdd\r\n    }\r\n}\r\n\r\n    \r\nasync function getTypes() {\r\n    const toys = (await axios.get(`${baseUrl}`)).data\r\n    var types = Array.from(new Set(toys.map(toy => toy.type)))\r\n    return types\r\n}\r\nasync function getChartData() {\r\n    const toys = (await axios.get(`${baseUrl}`)).data\r\n    const types = await getTypes()\r\n    const labels = types.map(type => type)\r\n    const datasets = [{\r\n        data: toys.reduce((acc, toy) => {\r\n            const currIdx = types.indexOf(toy.type);\r\n            const currAccCell = acc[currIdx]\r\n            acc[currIdx] = currAccCell ? acc[currIdx] + 1 : 1\r\n            return acc\r\n\r\n        }, []),\r\n        backgroundColor: [\r\n\r\n            '#FF6384',\r\n            '#36A2EB',\r\n            '#FFCE56',\r\n            '#0000FF',\r\n            '#00ff0d'\r\n\r\n\r\n        ],\r\n        hoverBackgroundColor: [\r\n            '#FF6384',\r\n            '#36A2EB',\r\n            '#FFCE56'\r\n        ]\r\n\r\n    }]\r\n    return { labels, datasets }\r\n\r\n}\r\n\r\n async function getChartDataByYear() {\r\n    const toys = (await axios.get(`${baseUrl}`)).data\r\n    let yearsMap = {}\r\n    toys.forEach(toy => {\r\n        const year = new Date(toy.createdAt).getFullYear()\r\n        if (yearsMap[year]) yearsMap[year] = yearsMap[year] + 1\r\n        else yearsMap[year] = 1\r\n\r\n    })\r\n    console.log('yearsMap', yearsMap);\r\n    return {\r\n        labels: [...Object.keys(yearsMap)],\r\n        datasets: [\r\n            {\r\n                label: 'Toys per year',\r\n                data: [...Object.values(yearsMap)]\r\n            }\r\n        ]\r\n    }\r\n\r\n}","import { toyService } from \"../../services/toyService.js\"\r\n\r\nconst initialState = {\r\n    filterBy: {},\r\n    // todos:todoService.query(),\r\n    toys: [],\r\n    msg:'',\r\n    \r\n\r\n}\r\n\r\n\r\nexport function toyReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case 'SET_TOYS': {\r\n\r\n            return { ...state, toys: [...action.toys] }\r\n        }\r\n        case 'SET_MSG': {\r\n\r\n            return { ...state, msg: action.msg }\r\n        }\r\n        case 'CLEAR_MSG': {\r\n\r\n            return { ...state, msg:null }\r\n        }\r\n        // case 'TOGGLE_ISDONE_TODO':\r\n        //     return { ...state, todos: state.todos.map(todo => todo._id === action.todo._id ? action.todo : todo) }\r\n        case 'ADD_TOY':\r\n            return {\r\n        \r\n                ...state, toys: [...state.toys, action.toy]\r\n            }\r\n        case 'UPDATE_TOY':\r\n            return {...state, toys: state.toys.map(toy => toy._id === action.toy._id ? action.toy : toy) }\r\n          \r\n      \r\n            \r\n          \r\n        case 'SET_FILTER': {\r\n            return { ...state, filterBy: { ...action.filterBy } }\r\n        }\r\n        case 'REMOVE_TOY':\r\n            return { ...state, toys: state.toys.filter(toy => toy._id !== action.toyId) }\r\n        \r\n     \r\n        \r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware, compose ,combineReducers} from 'redux'\r\n\r\n\r\n\r\nimport {toyReducer} from './reducers/toyReducer.js';\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    toyReducer,\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport { store } from './store/store.js'\nimport { HashRouter as Router } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\n\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n  console.log('beforeinstallprompt event has fired')\n  e.prompt()\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n    <Router>\n            <App />\n        </Router>\n  \n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.register();\n\n\n\n"],"sourceRoot":""}